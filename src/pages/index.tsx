/* eslint-disable @typescript-eslint/require-await */

import Head from "next/head";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";

const Home: NextPage = () => {
  const { data: sessionData } = useSession()
  
  const groupCreate = api.group.create.useMutation()
  const groupDelete = api.group.delete.useMutation()
  const groupAddUser = api.group.addUsers.useMutation()
  const {data: userGroups} = api.user.getGroups.useQuery()

  function createGroup() {
    groupCreate.mutate(({name:'test group'}))
  }
  function deleteGroup(groupId: string) {
    groupDelete.mutate(({id: groupId}))
  }

  function invite (groupId: string) {
    groupAddUser.mutate({groupId, usersToAdd: [{email: 'sergio_5_00@hotmail.com'}]})
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        
        <Header />

        
        <div className="flex min-h-screen flex-col bg-gradient-to-b from-[#2e026d] to-[#15162c]">
          <div className="container text-white">
            

            {sessionData?.user && <button className="p-4 bg-red-600 rounded-md" onClick={createGroup}> New group </button>}

            <div>
              {userGroups?.map(group => <div className="flex gap-7" key={group.id}>
                  {group.name}
                  <div onClick={()=> {deleteGroup(group.id)}}> DELETE </div>
                  <div onClick={()=> {invite(group.id)}}> INVITE DISCORD ACCOUNT </div>
              </div>)}
            </div>
            
            
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const Header: React.FC = () => {
  const { data:sessionData } = useSession()

  return (
    <div className="p-6 bg-neutral-500 w-full flex items-center justify-between gap-4">
      <div className="text-white">
        <p className="text-2xl">
          {sessionData && <span> Hey {sessionData?.user?.name}!</span>}
        </p>
        <p className="text-sm">
          {sessionData && <span> {sessionData?.user?.id} </span>}
        </p>
      </div>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
